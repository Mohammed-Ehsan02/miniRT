/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   intersection.h                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hsarhan <hsarhan@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/11/21 12:19:12 by mkhan             #+#    #+#             */
/*   Updated: 2022/11/22 17:57:32 by hsarhan          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef INTERSECTION_H
# define INTERSECTION_H

# include "scene.h"

/**
 * @brief Struct containing information relevant for mlx and the window
 * generated by it
 * @param mlx Pointer to mlx instance
 * @param mlx_win Pointer to mlx window
 * @param img Pointer to image that we will write the pixels to
 * @param addr Pointer to the first pixel of the image
 * @param bytes_per_pixel Bytes per pixel
 * @param line_length Number of pixels in a row
 * @param endian idk
 */
typedef struct s_mlx		t_mlx;
struct	s_mlx
{
	void	*mlx;
	void	*mlx_win;
	void	*img;
	char	*addr;
	int		bytes_per_pixel;
	int		line_length;
	int		endian;
};

/**
 * @brief Contains the time value of an intersection of a ray with an object,
 * along with the object that it intersected with
 * @param time The t value of the intersection
 * @param shape A pointer to the object that the ray intersected with
 */
typedef struct s_intersect	t_intersect;
struct s_intersect
{	
	float	time;
	t_shape	*shape;
};

/**
 * @brief A wrapper around an array of intersections
 * @param arr Array of intersections
 * @param count Number of intersections in the array
 */
typedef struct s_intersections t_intersections;
struct s_intersections
{
	t_intersect *arr;
	int 		count;
};

void draw_scene(t_scene *scene);

#endif
